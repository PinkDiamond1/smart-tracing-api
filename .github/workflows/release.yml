name: Build and deploy to staging
on:
  push:
    branches:
    - master
    tag-ignore:
    - v*
#    paths:
#    - pom.xml
#    - src/*

jobs:
  release:
    name: Release and deploy
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Perform Java Release
      run: |
        git config user.name github-actions
        git config user.email noreply@zerobase.io

        release_version=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec | awk -F'-' '{print $1}' | tail -1 | tr -d '[:space:]')
        mvn -B versions:resolve-ranges
        mvn -B versions:set -DnewVersion=${release_version}
        mvn -B clean verify
        git commit -am "[skip ci] Release: v${release_version}" --author='github-actions <noreply@zerobase.io>'
        git tag v${release_version}

        mvn versions:revert

        IFS=. read major minor patch <<< $(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec | awk -F- '{print $1}')
        next_version="${major}.${minor}.$((${patch} + 1))"
        mvn -B versions:set -DnewVerions=${next_version}-SNAPSHOT versions:commit
        git commit -am "[skip ci] Next Version: v${next_version}-SNAPSHOT" --author='github-actions <noreply@zerobase.io>'

        git push
        git push --tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push docker image
      env:
        DOCKERHUB_ACCESS_TOKEN: ${{secrets.DOCKERHUB_ACCESS_TOKEN}}
      run: |
        version=$(cat target/classes/build.properties | grep version | awk -F= '{print $2}')
        docker build . -t zerobaseio/smart-tracing-api:${version} -t zerobaseio/smart-tracing-api:latest
        docker login --username zerboaseuser --password ${DOCKERHUB_ACCESS_TOKEN}
        docker push zerobaseio/smart-tracing-api
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Deploy to staging environment
      run: |
        pip install boto3
        version=$(cat target/classes/build.properties | grep version | awk -F= '{print $2}')
        cd cloudformation
        export AWS_DEFAULT_REGION=us-east-1
        python deploy.py api staging ${version}
