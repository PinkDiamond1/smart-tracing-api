---
AWSTemplateFormatVersion: 2010-09-09
Description: Zerobase API Service Stack

Parameters:
  AllowedOrigins:
    Type: String
    Description: Value for CORS filter
  AppVersion:
    Type: String
  Cpu:
    Type: Number
    Default: 10
  DatabaseArn:
    Type: String
    Description: ARN for neptune database, used for task IAM role
  DatabasePort:
    Type: Number
    MinValue: 0
  DatadogApiKeyArn:
    Type: String
  DnsName:
    Type: String
  DomainSuffix:
    Type: String
  EcsClusterArn:
    Type: String
    Description: ARN of the cluster to deploy to
  EcsClusterServiceRoleArn:
    Type: String
  Environment:
    Type: String
    AllowedValues: ['staging', 'prod']
  EventTopicArn:
    Type: String
    Description: SNS Topic for publishing events from the backend
  HostedZoneId:
    Type: String
  KmsAlias:
    Type: String
  LoadBalancerListener:
    Type: String
  LoadBalancerDnsName:
    Type: String
  LoadBalancerHostedZoneId:
    Type: String
  LogRetentionDays:
    Type: Number
    MinValue: 0
    MaxValue: 14
    Default: 7
  Memory:
    Type: Number
    Default: 512
  ProjectLogLevel:
    Type: String
  ReadEndpoint:
    Type: String
  TaskCount:
    Type: Number
    MinValue: 1
    MaxValue: 6
    Default: 2
  VpcId:
    Type: AWS::EC2::VPC::Id
  WriteEndpoint:
    Type: String

Resources:
  DnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !Ref LoadBalancerDnsName
        HostedZoneId: !Ref LoadBalancerHostedZoneId
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DnsName
      Type: A

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - TargetGroupArn: !Ref TargetGroup
        Type: forward
      Conditions:
      - Field: host-header
        Values:
        - !Ref DnsName
      ListenerArn: !Ref LoadBalancerListener
      Priority: 7

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /admin/healthcheck
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: smart-tracing-api-service
      - Key: StackId
        Value: !Sub '${AWS::StackId}'
      - Key: Stack
        Value: !Sub '${AWS::Region}-${AWS::StackName}'
      - Key: Application
        Value: SmartTracing API
      - Key: Environment
        Value: !Ref Environment
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 0
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster: !Ref EcsClusterArn
      DesiredCount: !Ref TaskCount
      LoadBalancers:
      - ContainerName: app
        ContainerPort: 8080
        TargetGroupArn: !Ref TargetGroup
      Role: !Ref EcsClusterServiceRoleArn
      TaskDefinition: !Ref TaskDefinition

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '${Environment}-smart-tracing-api'
      RetentionInDays: !Ref LogRetentionDays

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
      - Cpu: !Ref Cpu
        Essential: true
        Environment:
        - Name: WRITE_ENDPOINT
          Value: !Ref WriteEndpoint
        - Name: READ_ENDPOINT
          Value: !Ref ReadEndpoint
        - Name: DB_PORT
          Value: !Ref DatabasePort
        - Name: SERVICE_REGION
          Value: !Ref AWS::Region
        - Name: CORS_ALLOWED_ORIGINS
          Value: !Ref AllowedOrigins
        - Name: BASE_LINK
          Value: !Sub 'https://www.${DomainSuffix}/s'
        - Name: JAVA_OPTS
          Value: -Xms256m -Xmx256m
        - Name: PROJECT_LOG_LEVEL
          Value: !Ref ProjectLogLevel
        - Name: ENVIRONMENT
          Value: !Ref Environment
        # TODO: Split these into multiple tasks
        - Name: ORGANIZATIONS_FEATURE_ENABLED
          Value: true
        - Name: MODELS_FEATURE_ENABLED
          Value: true
        - Name: DEVICES_FEATURE_ENABLED
          Value: true
        - Name: EVENT_TOPIC_ARN
          Value: !Ref EventTopicArn
        Image: !Sub 'zerobaseio/smart-tracing-api:${AppVersion}'
        Memory: !Ref Memory
        LogConfiguration:
          LogDriver: awsfirelens
          Options:
            Name: datadog
            apikey: ${DATADOG_API_KEY}
            Host: http-intake.logs.datadoghq.com
            dd_service: smart-tracing-api
            dd_source: app
            dd_message_key: log
            dd_tags: !Sub project:smart-tracing,version:${AppVersion},environment:${Environment}
            TLS: on
            provider: ecs
        Name: app
        PortMappings:
        - ContainerPort: 8080
          HostPort: 0
        - ContainerPort: 8081
          HostPort: 0
        Privileged: false
        Secrets:
        - Name: DATADOG_API_KEY
          ValueFrom: !Ref DatadogApiKeyArn
      - Essential: true
        Image: amazon/aws-for-fluent-bit:latest
        Memory: 50
        Name: log_router
        FirelensConfiguration:
          Type: fluentbit
          Options:
            enable-ecs-log-metadata: true
            config-file-type: file
            config-file-value: /fluent-bit/configs/parse-json.conf
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref LogGroup
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub '${Environment}-smart-tracing-api'
        Secrets:
        - Name: DATADOG_API_KEY
          ValueFrom: !Ref DatadogApiKeyArn
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: !Sub '${Environment}-smart-tracing-api'
      TaskRoleArn: !Ref TaskRole

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
      Policies:
      - PolicyName: !Sub 'SmartTracingApi_${Environment}_TaskExecPolicy'
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameters
            - kms:Decrypt
            Resource:
            - !Ref DatadogApiKeyArn
            - !Ref KmsAlias
          - Effect: Allow
            Action: logs:*
            Resource: '*'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: api-service-access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - neptune-db:*
            Effect: Allow
            Resource: !Sub '${DatabaseArn}/*'
          - Action:
            - ses:Send*
            Effect: Allow
            Resource: '*'
          - Action: sns:Publish
            Effect: Allow
            Resource: !Ref EventTopicArn
...
